/////////////////////////////////////////////////////////////////////////////////////////
/// @file  LyUtilities.h
/// @brief 一些小的使用工具
/// 
/// @author Leiyz
/// @date   20170831
/////////////////////////////////////////////////////////////////////////////////////////

#pragma once
#include <string>

typedef struct MEMPACKED         //定义一个mem occupy的结构体  
{
	char name1[20];      //定义一个char类型的数组名name有20个元素  
	unsigned long MemTotal;
	char name2[20];
	unsigned long MemFree;
	char name3[20];
	unsigned long Buffers;
	char name4[20];
	unsigned long Cached;
	char name5[20];
	unsigned long SwapCached;
}MEM_OCCUPY;


class CMemUtilities
{
public:
    CMemUtilities();
    ~CMemUtilities();

private:
    CMemUtilities(const CMemUtilities&) = delete;
    CMemUtilities& operator=(const CMemUtilities&) = delete;

public:
	static bool GetMemOccupy(MEM_OCCUPY& refOccupy);


};

