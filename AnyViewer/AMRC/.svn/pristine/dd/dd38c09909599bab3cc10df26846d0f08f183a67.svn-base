#include "WsktHandshakePacket.h"
#include <WebSocketParse.h>

#include <sha1.h>
#include <base64.h>
#include <iostream>
#include <fstream>

CWsktHandshakePacket::CWsktHandshakePacket()
    :CNetPacketBase(1024)
{
}

CWsktHandshakePacket::CWsktHandshakePacket(INT nSize)
    :CNetPacketBase(nSize)
{
    ;
}


CWsktHandshakePacket::~CWsktHandshakePacket()
{
}

//提取数据包
NET_EXTRACT_DATA_PACKET_RESULT CWsktHandshakePacket::ExtractData(CDataStreamBuffer& refDataBuffer)
{
    CWebSocketParse obj_web_socket_parse;
    NET_EXTRACT_DATA_PACKET_RESULT n_result = obj_web_socket_parse.parse_handshark_packet(refDataBuffer, m_objDataBuffer);

    if (NEDPR_JUST_A_PACKET == n_result || NEDPR_MORE_PACKETS == n_result)
    {
        obj_web_socket_parse.get_websocket_key(m_str_websocket_key);
    }

    return n_result;
}

void CWsktHandshakePacket::ResetContent()
{
    CNetPacketBase::ResetContent();
    m_str_websocket_key.clear();
}

//------------------------------------------------------------------------------------
/// @method InitHandsharkResponse
/// @brief 初始化握手响应包 
/// 
/// @param _in pBuffer->向缓冲区
/// @param _in nBuflen 缓冲区大小
/// @param _in nOffset 指向扫描结束后无效字符偏移
/// @return 成功返回NET_EXTRACT_DATA_PACKET_RESULT枚举
/// @author Leiyz
//------------------------------------------------------------------------------------
void CWsktHandshakePacket::InitHandsharkResponse(const std::string& strWebsocketKey)
{
    CWebSocketParse obj_web_socket_parse;
    obj_web_socket_parse.create_handshark_response(strWebsocketKey, m_objDataBuffer);
}
