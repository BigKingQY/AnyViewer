///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// @file  SyslogPacket.cpp
/// @brief Syslog日志数据包类实现
/// 
///
/// @author 黄丽云
/// @version 1.0
/// @date        2016-9-1
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include <exception>
#include "SyslogPacket.h"

CSyslogPacket::CSyslogPacket(int nSize)
	: m_objDataBuffer(nSize)
{
}

CSyslogPacket::~CSyslogPacket()
{
}

//------------------------------------------------------------------------------------
// CNetPacketBase::ResetContent
/// @brief 清空当前数据包对象的数据信息
///
/// @author 黄丽云
//------------------------------------------------------------------------------------
void CSyslogPacket::ResetContent()
{
	m_objDataBuffer.Empty();
}

//------------------------------------------------------------------------------------
// CNetPacketBase::GetHeaderPtr
/// @brief 得到数据包的内存数据指针
///
/// @return  返回一个指向缓冲区对象的参考指针
/// @author 黄丽云
//------------------------------------------------------------------------------------
BYTE* CSyslogPacket::GetHeaderPtr()
{
	return m_objDataBuffer.GetBufferHeadPtr();
}


int CSyslogPacket::GetPacketId()
{	
	return 0;
}

//------------------------------------------------------------------------------------
// CNetPacketBase::GetTotalLength
/// @brief 得到数据包的有效数据长度
///
/// @return  返回当前数据包的有效数据长度
/// @author 黄丽云
//------------------------------------------------------------------------------------
int CSyslogPacket::GetTotalLength()
{
	return m_objDataBuffer.GetDataLen();
}

//------------------------------------------------------------------------------------
// CNetPacketBase::Attach
/// @brief 关联当前的数据包到指定的数据
///
/// 该操作不会引发数据拷贝操作,一旦关联成功，我们将不能修改数据包数据了
/// @param pData 返一个指向目标数据的指针
/// @param  nLen 目标数据的长度
//------------------------------------------------------------------------------------
void CSyslogPacket::Attach(BYTE* pData, int nLen)
{ 
	m_objDataBuffer.Attach(pData, nLen); 
	m_objDataBuffer.IncreaseDataLen(nLen); 
}
//------------------------------------------------------------------------------------
// CNetPacketBase::Dettach
/// @brief 取消关联
//------------------------------------------------------------------------------------
void CSyslogPacket::Dettach()     
{ 
	m_objDataBuffer.Dettach();
}