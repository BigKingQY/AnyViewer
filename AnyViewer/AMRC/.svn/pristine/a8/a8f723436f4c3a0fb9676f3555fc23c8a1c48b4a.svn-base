#include "MemUtilities.h"
#include <algorithm>

CMemUtilities::CMemUtilities()
{
}


CMemUtilities::~CMemUtilities()
{
}

// ********************************************************************************
/// <summary>
/// 
/// </summary>
/// <param name="refOccupy">对无类型get函数含有一个形参结构体类弄的指针O</param>
/// <returns></returns>
/// <created>Andy,2020/10/9</created>
/// <changed>Andy,2020/10/9</changed>
// ********************************************************************************
bool CMemUtilities::GetMemOccupy(MEM_OCCUPY& refOccupy)
{
	bool bResult = false;
	char szBuffer[256] = { 0 };
	FILE *fd = fopen("/proc/meminfo", "r");

	if (nullptr != fd)
	{
		//从fd文件中读取长度为szBuffer的字符串再存到起始地址为szBuffer这个空间里   
		fgets(szBuffer, sizeof(szBuffer), fd);
		sscanf(szBuffer, "%s %lu ", refOccupy.name1, &refOccupy.MemTotal);
		fgets(szBuffer, sizeof(szBuffer), fd);
		sscanf(szBuffer, "%s %lu ", refOccupy.name2, &refOccupy.MemFree);
		fgets(szBuffer, sizeof(szBuffer), fd);
		sscanf(szBuffer, "%s %lu ", refOccupy.name3, &refOccupy.Buffers);
		fgets(szBuffer, sizeof(szBuffer), fd);
		sscanf(szBuffer, "%s %lu ", refOccupy.name4, &refOccupy.Cached);
		fgets(szBuffer, sizeof(szBuffer), fd);
		sscanf(szBuffer, "%s %lu", refOccupy.name5, &refOccupy.SwapCached);

		fclose(fd);     //关闭文件fd  
		bResult = true;
	}


	return bResult;
}