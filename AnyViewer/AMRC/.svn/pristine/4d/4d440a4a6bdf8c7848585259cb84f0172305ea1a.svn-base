/////////////////////////////////////////////////////////////////////
/// @file IniConfig.h
/// @brief INI格式文件操作类定义
/// 
/// @author andy
/// @version 1.0
/// @date 2021.3.18
/////////////////////////////////////////////////////////////////////

#pragma once

#include <boost/property_tree/ini_parser.hpp>
#include <boost/property_tree/ptree.hpp>

class CIniConfig
{
public:
	CIniConfig();

public:
	// 加载配置信息
	bool Load(std::string strPath);

	// 保存配置信息
	bool Save(std::string strPath);

public:
	// ********************************************************************************
	/// <summary>
	/// 设置指定参数的值
	/// </summary>
	/// <param name="strField">参数名称,带段名称，e.g. System.ip</param>
	/// <param name="strValue">参数的值</param>
	/// <created>Andy,2021/3/18</created>
	/// <changed>Andy,2021/3/18</changed>
	// ********************************************************************************
	template<class T>
	void SetValue(std::string strField, std::string strValue)
	{
		m_pRootNode.put<T>(strField, strValue);
	}

	// ********************************************************************************
	/// <summary>
	/// 得到指定参数的值
	/// </summary>
	/// <param name="strSection">段名称</param>
	/// <param name="strName">参数名称</param>
	/// <returns></returns>
	/// <created>Andy,2021/3/18</created>
	/// <changed>Andy,2021/3/18</changed>
	// ********************************************************************************
	template<class T>
	T GetValue(std::string strSection, std::string strName)
	{
		boost::property_tree::ptree child_node = m_pRootNode.get_child(strSection);

		return child_node.get<T>(strName);
	}

	void ResetContent() { m_pRootNode.empty(); }

private:
	boost::property_tree::ptree   m_pRootNode;
};

