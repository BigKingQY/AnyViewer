#pragma once

#include <string>
#include "log.h"
#include "config.h"


class CApplication;
CApplication* GetTheApp();


class CModuleStat
{
public:
    CApplication* m_pCurrentWinApp{ nullptr };
};

//*******************************************************************
/// <summary>
/// 应用程序基类
/// </summary>
//*******************************************************************
class CApplication
{
public:
    CApplication(const char* lpLogFile = nullptr,const char* lpConfigFile = nullptr);
    virtual ~CApplication() = default;

public:
	void GetAppPath(std::string& refPath);

public:
    void Execute();

protected:
    virtual void Run() = 0;

public:

	std::string GetValue(const std::string& strKey, const std::string& strDefault);

	int GetValue(const std::string& strKey, const int nDefault);
	
	void SetValue(const std::string& strKey, const std::string& strValue);
protected:
    virtual bool OnInit() = 0;
    virtual void OnUninitialized() = 0;

private:
    bool Init();
    void ExecuteChildProcess();
    static void SignalHandler(int nSig);
    void RegisterSignals();

private:
	/// <summary>日至文件名称</summary>
	std::string          m_strLogFile; 
	CConfig              m_objConfig;
};

extern CModuleStat g_moduleState;






