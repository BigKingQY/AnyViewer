/////////////////////////////////////////////////////////////////////
/// @file CPUUtilities.h
/// @brief 得到CPU信息和计算cpu消耗类定义
/// 
///
/// @author andy
/// @version 1.0
/// @date 2020.10.9
/////////////////////////////////////////////////////////////////////


#pragma once
#include <string>

//proc/stat文件结构  
//cpu  633666 46912 249878 176813696 782884 2859 19625 0  
//cpu0 633666 46912 249878 176813696 782884 2859 19625 0  
//intr 5812844  
//ctxt 265816063  
//btime 1455203832  
//processes 596625  
//procs_running 1  
//procs_blocked 0  

typedef struct CPUPACKED         //定义一个cpu occupy的结构体  
{
	char name[20];      //定义一个char类型的数组名name有20个元素  
	unsigned int user; //定义一个无符号的int类型的user  
	unsigned int nice; //定义一个无符号的int类型的nice  
	unsigned int system;//定义一个无符号的int类型的system  
	unsigned int idle; //定义一个无符号的int类型的idle  
	unsigned int lowait;
	unsigned int irq;
	unsigned int softirq;
}CPU_OCCUPY;


class CCPUUtilities
{
public:
    CCPUUtilities();
    ~CCPUUtilities();

private:
    CCPUUtilities(const CCPUUtilities&) = delete;
    CCPUUtilities& operator=(const CCPUUtilities&) = delete;

public:
	/// 得到CPU的统计信息
	static bool GetCPUStat(CPU_OCCUPY& refCPUOccupy);

	/// 计算CPU的消耗信息
	static double CaleCPUOccupy();

	// 获取CPU的序列号
	static bool GetCPUID(std::string & strCPUID);
};

