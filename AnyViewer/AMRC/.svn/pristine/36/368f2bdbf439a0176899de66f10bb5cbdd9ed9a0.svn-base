/************************************************************************
@Copyright (c) 2017 WAYOS.Co.Ltd. All rights reserved
@Auther    : Jeaham Chain
@Department: R&D
@E-mail	   : chenjinhan@wayos.cn
**************************************************************************/
extern "C"
{
#include <luajit.h>
#include <lauxlib.h>
#include <lua.h>
#include <lualib.h>
}

#include <2lua.h>
#include <stdlib.h>
#include <assert.h>
#include <log.h>
#include <string>

I32 lua_access(const std::string& strJson, std::string& strResult)
{
	I32 ret = -1;
	I32 stat = 0;
	lua_State *L = NULL;

	L = lua_open();
	if(!L)
	{
        log_error("lua_open()");
		goto ERR;
	}

	luaL_openlibs(L);

    ret = luaL_dofile(L, "./access.lua");
    if (0 != ret)
    {
        log_error("luaL_dofile() err:%d\n", ret);
        goto ERR;
    }

	lua_getglobal(L,"access");
    lua_pushlstring(L, strJson.c_str(), strJson.length());

	if(lua_pcall(L,1,2,0) != 0)
	{
        log_trace("lua_pacll:%s\n", lua_tostring(L, 1));
		goto ERR;
	}

	stat = (I32)lua_tonumber(L, 1);
    strResult = (I8*)lua_tostring(L, 2);

	if(stat)
	{
        log_error("call lua error:%s\n", strResult.c_str());
		goto ERR;
	}

	ret = 0;
ERR:
	lua_settop(L,0);
	lua_close(L);
	return ret;
}


